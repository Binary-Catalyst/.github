name: Development Jira Sync Issue Status

on:
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - synchronize
      - ready_for_review
      - locked
      - unlocked
  pull_request_review:
      types:
        - submitted
  check_suite:
    types:
      - completed
  workflow_dispatch:
    inputs:
      pull-request:
        description: Sync JIRA Status with PR
        required: false

jobs:
  jira_login:
    runs-on: ubuntu-latest
    env:
      jira_issue_status: 'test'
    steps:
      - name: Step 1 Checkout
        uses: actions/checkout@master

      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}

  jira_priority_sync:
    runs-on: ubuntu-latest
    name: Label Pull Request with Jira properties
    needs: jira_login
    steps:
      - name: Jira Issue Label Priority
        uses: xserrat/pr-jira-properties-labeler@v1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JIRA_ENCODED_TOKEN: ${{ secrets.JIRA_TOKEN_ENCODED }}
          JIRA_URI: ${{ secrets.JIRA_BASE_URL }}
          regexp_jira_issue_code_on_pr_title: '^([A-Z]{3}-[0-9]{4}).*'
          issue_properties: '[priority]'

  jira_transition_sync:
    runs-on: ubuntu-latest
    name: Label Pull Request with Jira properties
    needs: jira_login
    steps:
      - name: Find issue key in PR title
        id: issue_key_pr_title
        continue-on-error: true
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ github.event.pull_request.title }}
          from: '' # required workaround for bug

      - name: Find issue key in branch name
        continue-on-error: true
        id: issue_key_branch_name
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ github.event.pull_request.head.ref }}
          from: '' # required workaround for bug

      - name: Check if issue key was found
        run: |
          if [[ -z "${{ steps.issue_key_pr_title.outputs.issue }}" && -z "${{ steps.issue_key_branch_name.outputs.issue }}" ]]; then
              echo "Jira issue key could not be found!"
              exit 1
          fi
      - name: Comment Issue - Approved
        uses: atlassian/gajira-comment@master
        if: github.event.review.state == 'approved' ||
        github.event.check_run == 'completed'
        with:
          issue: ${{ steps.issue_key_pr_title.outputs.issue ||
          steps.issue_key_branch_name.outputs.issue }}
          comment: "${{ github.event.pusher.name }} has approved the pull
           request. This issue is ready to be merged and deployed to staging"

      - name: Transition Issue Backwards - Change Requested
        uses: atlassian/gajira-transition@master
        if: github.event.review.state == 'changes_requested' && github.event.review
        with:
          issue: ${{ steps.issue_key_pr_title.outputs.issue || steps.issue_key_branch_name.outputs.issue }}
          transition: 'In Progress'

      - name: Transition Issue Forwards - Changes Made
        uses: atlassian/gajira-transition@master
        if: github.event.review.state != 'changes_requested' || !github.event.review
        with:
          issue: ${{ steps.issue_key_pr_title.outputs.issue || steps.issue_key_branch_name.outputs.issue }}
          transition: 'In Peer Review'

      - name: Dump GitHub context
        if: ${{ failure() }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo The current review state is
          echo ${{ github.event.review.state }}
      # - name: Determine issue type
      #   run: |
      #     if [[ ${{ contains(github.event.issue.labels.*.name, 'bug') }} == true ]]; then
      #         echo "ISSUE_TYPE=Bug" >> $GITHUB_ENV
      #     elif [[ ${{ contains(github.event.issue.labels.*.name, 'new feature') }} == true ]]; then
      #         echo "ISSUE_TYPE=New Feature" >> $GITHUB_ENV
      #     else
      #         echo "ISSUE_TYPE=Improvement" >> $GITHUB_ENV
      #     fi
      # TODO: Need to either lock down JIRA to never allow branches on statuses
      # Not backlogged or make this more graceful to where it will catch
      # It up to the status no matter what.
      # TODO: Add comment to ticket explaining
      # TODO: Copy priority over from JIRA issue
