name: Jira Sync Issue

on:
  pull_request_review:
    types: [submitted, edited, dismissed]
  workflow_dispatch:
    inputs:
      pull-request:
        description: Sync JIRA Status with PR
        required: false

jobs:
  jira_sync_with_review:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 Checkout
        uses: actions/checkout@master

      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Find issue key in PR title
        id: issue_key_pr_title
        continue-on-error: true
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ github.event.pull_request.title }}
          from: '' # required workaround for bug

      - name: Find issue key in branch name
        continue-on-error: true
        id: issue_key_branch_name
        uses: atlassian/gajira-find-issue-key@master
        with:
          string: ${{ github.event.pull_request.head.ref }}
          from: '' # required workaround for bug

      - name: Check if issue key was found
        run: |
          if [[ -z "${{ steps.issue_key_pr_title.outputs.issue }}" && -z "${{ steps.issue_key_branch_name.outputs.issue }}" ]]; then
              echo "Jira issue key could not be found!"
              exit 1
          fi

      # - name: Retain Issue Status - Peer Review
      #   if: github.event.review.state != 'review_requested' || !github.event.review
      #   uses: atlassian/gajira-transition@master
      #   with:
      #     issue: ${{ steps.issue_key_pr_title.outputs.issue || steps.issue_key_branch_name.outputs.issue }}
      #     transition: "In Peer Review"

      - name: Transition Issue Backwards - Change Requested
        if: github.event.review.state == 'changes_requested'
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.issue_key_pr_title.outputs.issue || steps.issue_key_branch_name.outputs.issue }}
          transition: 'Peer Review Failed'

      - name: Dump GitHub context
        if: ${{ failure() }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo The current review state is
          echo ${{ github.event.review.state }}
      # - name: Determine issue type
      #   run: |
      #     if [[ ${{ contains(github.event.issue.labels.*.name, 'bug') }} == true ]]; then
      #         echo "ISSUE_TYPE=Bug" >> $GITHUB_ENV
      #     elif [[ ${{ contains(github.event.issue.labels.*.name, 'new feature') }} == true ]]; then
      #         echo "ISSUE_TYPE=New Feature" >> $GITHUB_ENV
      #     else
      #         echo "ISSUE_TYPE=Improvement" >> $GITHUB_ENV
      #     fi
      # TODO: Need to either lock down JIRA to never allow branches on statuses
      # Not backlogged or make this more graceful to where it will catch
      # It up to the status no matter what.
      # TODO: Add comment to ticket explaining
      # TODO: Copy priority over from JIRA issue
