# This is a basic workflow to help you get started with Actions

name: Production - 1. Auto-merge Pull Request

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the staging branch
  #   push:
  #     branches: [ staging ]
  pull_request:
    branches: [staging]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

      - name: Auto-Merge Pull Request
        # You may pin to the exact commit or the version.
        # uses: reitermarkus/automerge@46b8b95bac3325964476acc56f9160a98d1e7291
        uses: reitermarkus/automerge@v1.5.1
        with:
          # A GitHub Token other than the default `GITHUB_TOKEN` needs to be specified in order to be able to trigger other workflows.

          token: ${{ github.token }}
          # Specify which merge method to use. By default, will select the first one available in this order: `merge`, `squash`, `rebase`
          # merge-method: # optional
          # Use the pull request title as the commit message when squashing.
          # squash-title: # optional
          # When any of the labels in this comma-separated list is applied to a pull request, it will not be merged automatically.
          # do-not-merge-labels: # optional
          # Comma-separated list of labels that are required to be applied to a pull request for it to be merged automatically.
          # required-labels: # optional
          # Try merging the specified pull request automatically. For example, you can pass an input from a `workflow_dispatch` event.
          # pull-request: # optional
          # Comma-separated list of required author associations for the pull request author. (By default, pull requests by any author are allowed.)
          # pull-request-author-associations: # optional
          # Comma-separated list of required author associations for the review author. (By default, reviews by authors which are a `COLLABORATOR`, `MEMBER` or `OWNER` are allowed.)
          # review-author-associations: # optional
          # If set to `true`, will not actually merge pull requests but still perform all other checks.
          # dry-run:
